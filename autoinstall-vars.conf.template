# Configuration for the ISO generation of Zentyal

# General
GEN_DEBUG='false'
BASE_DIR='/home/zentyal/iso-generator'
ISO_BUILD_DIR="${BASE_DIR}/source-files"
TMP_DIR="${BASE_DIR}/tmp"
THEME="${BASE_DIR}/themes/zentyal/"

# Ubuntu
UBUNTU_ISO_NAME='ubuntu-22.04.4-live-server-amd64.iso'   ## You can get the name from here: https://releases.ubuntu.com/jammy/
UBUNTU_ISO_PATH="${BASE_DIR}/${UBUNTU_ISO_NAME}"
UBUNTU_DIST='jammy'
UBUNTU_VERSION='Ubuntu 22.04'

# Zentyal
ZEN_VERSION='8.0'
ZEN_EDITION='development'
ZEN_REPO_ARCH='amd64'
ISO_NAME="zentyal-${ZEN_VERSION}-${ZEN_EDITION}-${ZEN_REPO_ARCH}.iso"
VOL_NAME="zentyal-${ZEN_VERSION}-${ZEN_EDITION}"
ZEN_REPO_KEYS_URL='
https://keys.zentyal.org/zentyal-8.0-packages-org.asc
https://keys.zentyal.org/zentyal-8.0-packages-com.asc
'
ZEN_REPO_KEY_NAME='zentyal-8.0-packages-org.asc'
ZEN_REPO_URL='https://packages.zentyal.org/zentyal'
ZEN_REPO_COMPONENTS='main extra'

# Zentyal commercial
LK_ID=''
LK_UUID=''

# Docker
DOCKER_REPO_KEY_URL='https://download.docker.com/linux/ubuntu/gpg'
DOCKER_REPO_KEY_NAME='docker.gpg'
DOCKER_REPO_ARCH='amd64'
DOCKER_REPO_URL='https://download.docker.com/linux/ubuntu'
DOCKER_REPO_DIST='jammy'
DOCKER_REPO_COMPONENTS='stable'

# Firefox
FIREFOX_REPO_KEY_URL='https://packages.mozilla.org/apt/repo-signing-key.gpg'
FIREFOX_REPO_KEY_NAME='packages.mozilla.org.asc'
FIREFOX_REPO_URL='https://packages.mozilla.org/apt'
FIREFOX_REPO_DIST='mozilla'
FIREFOX_REPO_COMPONENTS='main'
FIREFOX_REPO_PREFERENCE_NAME='mozilla'

# Offline installation
FETCH_OFFLINE_PACKAGES='true'
PKG_TO_DOWNLOAD='
    zentyal
    zentyal-all
    language-packs-zentyal-all
    zenbuntu-core
    zenbuntu-desktop
    linux-generic
    linux-headers-generic
    console-cyrillic
    xfsprogs
    xserver-xorg-video-all
    xserver-xorg-video-intel
    xserver-xorg-video-qxl
    gnupg
    busybox-initramfs
    initramfs-tools
    libefiboot1
    libefivar1
'
PKG_TO_DOWNLOAD_COMMERCIAL=''
PKG_FILE_NAME='zentyal-packages-offline.tar.gz'
CHROOT_PKG_OFFLINE_BASE="${BASE_DIR}/offline-packages"
CHROOT_PKG_OFFLINE_BUILD_DIR="${CHROOT_PKG_OFFLINE_BASE}/build-system"
CHROOT_PKG_OFFLINE_RESULT_DIR="${CHROOT_PKG_OFFLINE_BASE}/packages"
